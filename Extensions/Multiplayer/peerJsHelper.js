var gdjs;(function(l){const m=new l.Logger("Multiplayer");let v;(function(n){const j=e=>typeof e=="object"&&e!==null&&typeof e.messageName=="string"&&typeof e.data=="object";class A{constructor(s,t){this.data=s,this.sender=t}getData(){return this.data}getSender(){return this.sender}}n.MessageData=A;class L{constructor(s){this.data=[];this.messageName=s}getName(){return this.messageName}getMessages(){return this.data}pushMessage(s,t){this.data.push(new A(s,t))}}n.MessagesList=L;let o={debug:1},r=null;const p=new Map,h=new Map;let x=!1;const M=[],b=[];let u="none";n.setCompressionMethod=e=>{u=e};async function I(e){if(u==="none")return JSON.stringify(e);const s=u==="cs:gzip"?"gzip":"deflate",t=JSON.stringify(e),i=new TextEncoder().encode(t),d=new CompressionStream(s),f=d.writable.getWriter();f.write(i),f.close();const N=d.readable.getReader(),w=[];for(;;){const{done:g,value:D}=await N.read();if(g)break;w.push(D)}return new Uint8Array(w.reduce((g,D)=>g.concat(Array.from(D)),[]))}async function O(e){if(u==="none"){if(typeof e!="string"){m.error(`Error while parsing message using compressionMethod ${u}: received data is not a string.`);return}try{return JSON.parse(e)}catch(c){m.error(`Error while parsing message: ${c.toString()}`);return}}const s=u==="cs:gzip"?"gzip":"deflate",t=new DecompressionStream(s),a=t.writable.getWriter();a.write(e),a.close();const d=t.readable.getReader(),f=[];for(;;){const{done:c,value:g}=await d.read();if(c)break;f.push(g)}const k=new Uint8Array(f.reduce((c,g)=>c.concat(Array.from(g)),[])),w=new TextDecoder().decode(k);try{return JSON.parse(w)}catch(c){m.error(`Error while parsing message: ${c.toString()}`);return}}n.getOrCreateMessagesList=e=>{const s=h.get(e);if(s)return s;const t=new L(e);return h.set(e,t),t};const C=e=>{p.set(e.peer,e),e.on("data",async s=>{if(j(s)){const t=n.getOrCreateMessagesList(s.messageName),a=e.peer,i=await O(s.data);if(!i)return;t.pushMessage(i,a)}}),e.on("error",()=>{S(e.peer)}),e.on("close",()=>{S(e.peer)}),e.on("iceStateChanged",s=>{s==="disconnected"&&S(e.peer)}),function s(){e.peerConnection&&(e.peerConnection.connectionState==="failed"||e.peerConnection.connectionState==="disconnected"||e.peerConnection.connectionState==="closed")?S(e.peer):setTimeout(s,1e3)}()},S=e=>{!p.has(e)||(M.push(e),p.delete(e))},y=()=>{r===null&&(r=new Peer(o),r.on("open",()=>{x=!0}),r.on("error",e=>{m.error("PeerJS error:",e)}),r.on("connection",e=>{e.on("open",()=>{C(e),b.push(e.peer)})}),r.on("close",()=>{r=null,y()}),r.on("disconnected",r.reconnect))};n.connect=e=>{if(r===null)return;const s=r.connect(e);s.on("open",()=>{C(s)})},n.disconnectFromAllPeers=()=>{for(const e of p.values())e.close()},n.sendDataTo=async(e,s,t)=>{if(!e.length)return;const a=await I(t);for(const i of e){const d=p.get(i);d&&d.send({messageName:s,data:a})}},n.getAllMessagesMap=()=>h,n.useCustomBrokerServer=(e,s,t,a,i)=>{Object.assign(o,{host:e,port:s,path:t,secure:i,key:a.length===0?"peerjs":a}),y()},n.useDefaultBrokerServer=y,n.useCustomICECandidate=(e,s,t)=>{o.config=o.config||{},o.config.iceServers=o.config.iceServers||[],o.config.iceServers.push({urls:e,username:s,credential:t})},n.forceUseRelayServer=e=>{o.config=o.config||{},o.config.iceTransportPolicy=e?"relay":"all"},n.getCurrentId=()=>r==null?"":r.id||"",n.isReady=()=>x,n.getJustDisconnectedPeers=()=>M,n.getAllPeers=()=>Array.from(p.keys()),l.callbacksRuntimeScenePostEvents.push(()=>{for(const e of h.values())e.getMessages().length=0;M.length>0&&(M.length=0),b.length>0&&(b.length=0)})})(v=l.multiplayerPeerJsHelper||(l.multiplayerPeerJsHelper={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=peerJsHelper.js.map
